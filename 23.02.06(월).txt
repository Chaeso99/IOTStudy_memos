23.02.06(월)
<오전수업>
기본적인 실력이 있어야 다음달에 넘어가는 프레임워크 수업을 들을 수 있음 기초가 중요함
코딩테스트 열심히 풀기
공부 진도 따라가기 힘들면 연락하기

<개발의 목적>
개발(코딩)의 본질:"해줘"(컴퓨터한테)-근본적인 목적은 내 목표를 이루는 것이다.
코딩을 잘해야 하는 이유:회사에서 잘 뽑아줌/내 사업을 할 수 있어서

재능도 필요하지만 노력하면 할수있음-노력도 재능이다. 습관은 훈련이다.
어떤 일이든 결정은 심사숙고해서 결정하고 결정했으면 고민없이 끝까지 달리자
 ㄴ최대한 아웃풋 끌어내기(결정한 상태에서 고민하게 되면 시간낭비임), 이 일이 안맞더라도 더 빨리
끝나고 다음 일으로 넘어갈 수 있다./자신이 선택한 모든일에 치열하게

대학교와 회사의 차이-대학은 학문을 위한곳/회사는 수익을 위한곳
대학은 공부를 잘해야 하지만/회사는 회사에 돈을 벌어줘야함.

대학에서 배운거<학원에서 6개월<회사에서 한달//학생때 공부한달==직장에서 하루
직장인들은 위같은 느낌을 받음

교수님들이 툴로 만들지 말라고 하는 것- 꼼수쓰지말고 한땀한땀 직접 해라
회사는 꼼수든 뭐든 일단 일을 해내야함(돈이 걸린 문제):가장 빠른쪽으로 가면 됨

아마추어와 프로의 차이:돈을 받느냐 안받느냐 뿐임. 돈==책임

회사에서 직원을 고용하려면
급여/4대보험/퇴직금/사무실 임대료 및 시설, 기기/사내복지
기본급의 1.5~2배 필요

공부하다 막히면 질문하기!!!!!!!!(주말이나 시간에 상관없이 반드시, 답변은 늦을 수 있음)
-----------------------------------------------------------------------------------------------------------
<오늘 배울것>
-exist / union
-all / some
조인, 서브쿼리

<관계형 데이터베이스란? rdbms>
rdbms-중복 최소화/insert 위주
장점:join/용량 적음
단점:읽기 속도가 느리다

대부분 rdbms를 사용함!

nosql-중복 상관없음/select 위주
장점:읽기 속도가 빠르다
단점:join 어려움/용량 많아짐

<데이터베이스 엔티티란 entity>
-데이터베이스의 테이블(객체들)
-데이터 한줄(튜플, 1행)

<데이터베이스 속성이란 Attribute>
-열
-객체의 필드(멤버변수, 프로퍼티)

<데이터베이스 식별자란 Identifier>
-어떤 튜플을 특정 할 수 있는 어떤 것(예를들어 학번)

<데이터베이스 관계란 relationship>
-테이블과 테이블의 관계(JOIN)

<데이터베이스 제약조건(이중에 한두가지 적용)>
-null이 들어가면 안된다
-값이 중복되면 안된다
-연관된 테이블이 없어지면 안된다
-생성시 기본값이 있다

<데이터베이스 무결성>
-null 무결성, 개체 무결성, 참조 무결성 등 제약조건과 연관된다.

<데이터베이스 인덱스>
select * 
from emp
where emp_id = 100;
위 문장 했을때 emp_id가 PK면 전체를 조회하지 않고 인덱스 스캔을 해서 해당 값만 조회
인덱스는 대용량의 자료를 빠르게 스캔 할 때 사용
인덱스는 보통 btree(비트리)를 많이 사용함

<데이터베이스 풀스캔과 인덱스스캔>
기본적으로 데이터베이스는 값 있는거 다 찾음(풀스캔)
데이터가 적거나 고정적일 때 풀스캔

데이터가 많아질 가능성이 있으면 인덱스스캔
인덱스스캔:DB의 데이터를 반으로 나눔 우리가 50번을 찾으니까 51~100번을 버림
1~50번을 반으로 나눠서 1~25번을 버림... 반복해서 우리가 필요한 데이터를 찾음
 
//여기까진 꼭 알아야됨
------------------------------------------------------------------------------------------------------------
<데이터베이스 프로시저와 함수>
-에러 검출이 어려워서 요새 잘안씀, 서버에서 대부분 처리

<데이터베이스 트리거>
-서버에서 처리하기 때문에 잘 안씀

데이터베이스 정규화
데이터베이스 반정규화 
-둘다 DB의 성능을 개선하기 위해서 사용
//정보처리기사 따려면 공부해야함, 일단 대략 정리
-----------------------------------------------------------------------------------------------------------
DCL
DDL
DML
데이터베이스 테이블 만들어보기
-------------------------------------------------------------------------------------------------------
이클립스 자동완성 방법:Window-Preferences-java검색-content assist-Auto Activation
의 . 적혀있는 트리거 부분에 영어 소문자 다적으면 됨qwertyuiopasdfghjklzxcvbnm
-------------------------------------------------------------------------------------------------------
<오후수업>
자바스크립트 보다 자바가 중요함

디비버 사용, 단톡방으로 받은 코드 입력해서 분석
요구사항을 보고 코드를 짤수도, 코드를 보고 요구사항을 분석할수도 있어야됨

디비버에서 쿼리 작성(유저, 방명록, 접속기록 테이블)-실무에서 짜는 방식은 아님, 공부용
나중에 DB만들기전에 DB로 바로 만들지 말고 엑셀 등 열어서 적어보고 만들면 편함
-기본키(Primary Key/Unique Key), not null, 외래키(Foreign Key), 트리거
유저:idx/유저명/전화번호 //전화번호는 보통 문자열로 지정

방명록:IDX/number/기본키
comment/varchar2(140)/내용
유저_IDX/number/유저 외래키
IDX는 제약조건 PK 설정

접속기록: 테이블명 LOG
IDX/NUMBER/NOTNULL/기본키
BOOK_IDX/NUMBER/NOTNULL/방명록 외래키
VISIT_DATE/DATE/NOTNULL/방문일시

IDX (PK)/BOOK_IDX(FK, Cascade) 설정

컨트롤S 누르고 코드 확인 후 persist(데이터베이스에 영속화) 누르기

기본키는 유일한 값이라서 자동으로 인덱스로 생성된다
Cascade:흘러내린다(원래 바뀐애랑 똑같이 해주세요-유저가 지워지면 유저가 쓴 글도 모두 삭제)
Restrict:변경/삭제 취소

SELECT * FROM "USER";
SELECT * FROM "GUEST BOOK" gb ;
SELECT * FROM "LOG";

INSERT INTO "USER" VALUES(1, '홍길동', '010-1234-5678');
UPDATE "USER" SET TEL = '010-1111-2222' WHERE IDX = 1; 
--WHERE 안걸면 테이블 안의 모든 TEL이 바뀜
DELETE FROM "USER" u WHERE IDX = 1;
--UPDATE나 DELETE 는 PK를 이용해서 한다