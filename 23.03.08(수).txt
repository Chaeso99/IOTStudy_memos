23.03.08(수)
<오전수업>
(Apache)Tomcat- 
ㄴ아파치는 원래 웹 서버의 일종/톰캣은 WAS(웹 어플리케이션 서버)
WAS(JSP컨테이너)의 역할:a.jsp를 만들면 a_jsp.java로 바뀌고 다시 a_jsp.class로 바꾼다.
웹 서버는 문서, 이미지, 동영상, 음악 등의 역할을 수행함
자바는 오픈소스로 시작했기 때문에 WAS의 종류가 정말 다양하다. 취업시 WAS 뭐 했냐고
물어볼 가능성 있음
톰캣의 장점:무료, 성능이 딸리지 않음

보통 서버 가격 책정을 옛날에는 접속인원수에 따라서 가격을 책정했는데
지금은 서버(PC)의 스펙에 따라서 견적을 짠다.

책을 내면 출판사에서 가져가는 수수료가 많음(저자에겐 8~13프로정도 들어옴, 공저자면
여기서 나눔)
최근에는 전자책으로 내서 직접 유통시키는 경우도 있다.(pdf 등 이용)
특히 IT는 기술이 빨리빨리 변하기 때문에 전자책이 어울림
-------------------------------------------------------------------------------------------------
Jsp폴더에서 MyApp 삭제(이클립스에서 삭제할때 뜨는 알림창 체크박스 체크안하고 지우면
이클립스에서만 지워짐/체크하고 지우면 파일자체가 지워짐)

이클립스 import 할때 특정 워크스페이스에 있는 프로젝트 다 불러올 수 있음

이클립스 우측상단의 설정이 Web이나 JEE로 되어있어야함
project explorer에서 우클릭->new->Dynamic Web Project
한글보다는 영어 메뉴를 사용해야 오류나거나 했을때 검색하기 편하다

프로젝트 진행 시 호스팅 받는것도 해보면 도움됨(지금은 클라우드 시스템 시대<-호스팅에서
출발된 개념)

톰캣은 9.0버전 사용해야함(이후 최신 버전들은 패키지명이 달라서 기능이 잘 안됨)

JSP는 후발주자였지만 지금은 ERP(대기업)수요에 맞춰 자바와 연동되게 개발했기 때문에
마켓쉐어 최상위권이 되었다.
서블릿/Java파일은 Java Resources에
외부 라이브러리(.jar 파일 등)는 lib에
html, jsp 포함한 웹 관련한 파일 및 리소스는 webapp에 저장
실행은 Shift+F10

서블릿은 자바 프로그램이기 때문에 클래스 네임이 대문자로 시작(HelloWorld),
이름 뒤에 servelt을 붙이는게 일반적임/생성할때 next 누른후 나오는 URL mappings가 중요함
(서블릿을 이 이름으로 실행해줘 라고 세팅해주는 값)
server.xml:Tomcat 서버와 관련된 환경설정

문법적인 부분도 중요하지만 환경적인 부분이 먼저 되어야함(실행오류 수정 등)
서버 포트번호는 80번만 유일하게 생략가능
server.xml을 수정하면 이클립스기준 Servers탭의 실행버튼을 눌러 서버를 다시 켜야함

server.xml 맨 아래부분의 <Context>에 우리가 실행했던 프로그램들이 추가되는 구조다.

jsp 디버깅을 위해서 <Context에> workDir 속성 추가

파일매니저와 이클립스 프로젝트 익스플로러 동기화하기:Preferences열어서 General->Workspace
의 Refresh using native hooks or polling 체크

.jsp 디버깅:
_jsp.java 디버깅:_jsp.java에서 해결

JSP 페이지 구성 요소
선언문(Declaration)/스크립트릿(Scriptlet)/표현식(Expression)/주석(Comment)
/JSP의 기본 제어문

html 주석은 코드 전송될때 클라이언트에게 같이 보내지므로 클라이언트도 볼 수 있음.
클라이언트가 보면안되는 주석은 다른자막으로 처리해야함

JSP파일에서 예를들어 선언문에 set Random(){}을 넣으면 해당 메소드는 해당 페이지에서만 
사용가능/ 선언문으로 선언되어진 메서드 및 필드는 자기필드에서만 사용가능하다.
---------------------------------------------------------------------------------------------------
<오후 수업>
JSP에선 다른 페이지의 데이터는 주고받을 수 있지만 자바처럼 객체생성해서 동작하는건 불가능
필요한 유틸성 클래스들은 반드시 자바로 만들어야 여러번 사용 가능함(그래서 jsp 선언문이
많이 안쓰임)

Shift+F10로 실행해서 인터넷에 결과 보인후 우클릭해서 페이지 소스 보기 누르면 주석까지
다보임

우리가 초기화 하지 않은 필드(전역변수)는 JVM이 알아서 0으로 초기화시킴-선언문이라서
(지역변수는 초기화 우리가 직접 해야함)

객체를 만들때 메소드보다 필드를 먼저 만들기 때문에 코드상 필드가 밑에 있어도 상관없음.
일반적으로 필드나 선언문을 먼저 만들긴 함

html에서 <form>은 화면에 따로 보이진 않음. 코드에서 액션이 있고 요청이 됨
get 방식은 값이 url에 노출됨/post 방식은 url에 노출되지 않음

웹은 페이지와 페이지의 통신이다(데이터가 넘어감). 
입력하면 서버에 요청하고 서버가 응답해주는 방식

if.html에서 method는 디폴트가 "get"방식
통신할때 모든 타입은 문자가 된다

Tomcat의 Server.xml은 서버관리자들이 작업하는 서버 전체에 대한 설정 파일
webapp이라는 폴더 안에 하나하나의 사이트 단위 폴더가 있음(myapp/examples)
webapp폴더 안에 WEB-INF 폴더안에 web.xml은 어플리케이션 설정임
(web.xml이 없으면 Servers 프로젝트 밑의 web.xml을 참조함)

파일이름.jsp 빼먹고 localhost/myapp/ch05 까지만 적으면 404에러나옴
파일이름을 안적으면 기본적으로는 index.jsp를 찾아서 띄우는데 우리는 아직 안만들었으니까~
ㄴ 설정하면 링크해서 아래의 모든 페이지가 리스트형식으로 보일수있도록 가능함 개발은
이렇게 해놓고 한다(WEB-INF 밑에 web.xml 넣기)