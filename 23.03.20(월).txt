23.03.20(월)
오전:화면구현하고 git, 이미지 제출이후 기능+페이지이동 해보기
오후:서버와 통신

유튜브 열코딩 검색하면 강사님이 찍은 강의영상 나옴

github에서 히스토리에 Merge branch 'master' of... 어쩌고 뜨는건 업로드 과정에서 
충돌났던걸 고치고 올렸다는 의미니까 무시해도 됨

String으로 값을 출력해서 붙이기
--------------------------------------------------------------------------------------------------
새 프로젝트 생성(HRD넷 앱 화면 기반으로 진행/flutter_hrd_page)
플러터
-화면 구성
test 안의 dart 파일 삭제.
pubspec.yaml 파일 내용 일부 추가
main.dart 파일 내용 작성

-상태 관리(지역, 전역)
내부 동작 방식은 지금 안중요함
0. 일반 변수(상태가 아닌 변수)는 바뀌더라도 화면이 변하지 않는다. 
1. 데이터가 변하면 화면이 변한다.(재빌드)
2. 데이터를 넣어 주는 방식을 기억한다.
2-1.상태주입 (HookWidget, MultiProvider)
2-2.상태변경 (만든 함수 controller.change())
2-3.상태관찰(controller.isChecked)
-기능
onTap등 유저의 반응을 통해서 함수 실행

-페이지 이동
Navigator를 이용해서 이동

-페이지 내에서 화면 전환
페이지에 종속된 위젯들을 조건에 맞게 출력

(예:카톡)
원래있던 바텀네비게이션바가 안보인다는건 페이지가 전환된것
바텀네비게이션바중 한부분을 눌러서 바뀌는건 페이지는 그대로, 안의 내용만 바뀌는것
(MVC패턴)
일반적인 모든 화면을 사용하는 프로그램에선 controller/model/view로 파일을 쪼개는편임
컨트롤러:상태 관리 다트 파일
모델:서버 통신 및 데이터 형태를 정의하는 다트 파일, 통신 기능 구현 다트 파일
뷰:Page 관련 다트 파일
+widgets:해당 페이지에 필요한 위젯들(이 폴더는 필수 x)

폴더나 파일 만들때마다 add file to git 뜨는 경우 그냥 확인 누르면 됨.
항상 페이지 만들면 무조건 import부터 하기(matireal.dart 등)

default_page.dart 파일에서 title의 Text를 Center로 감싸는 방법이 있고 , centerTitle:true
로 설정하는 방법이 있다 둘이 위치가 조금 다른 중앙정렬임
centertitle은 다른 내용이 옆에 들어가도 본인이 완전 중앙이고
Center로 감싸는건 다른 내용들이 들어가면 조금 밀림

화면 위젯에는 3가지가 있다.
1.직계자식을 가질 수 없는 위젯(Text, Image 등)
2.직계자식을 하나만 가질 수 있는 위젯(MaterialApp, Scaffold, SafeArea 등) child
3.직계자식을 여러개 가질 수 있는 위젯(Column, Row, ListView 등) children

stateless위젯 - 한번 빌드하면 화면 변경이 안됨
stateful 위젯 - 상태에 따라 화면 변경이 됨
stateless위젯 + 상태 라이브러리 사용하면 상태에 따라 화면 변경 가능
라이브러리 위젯(예:Hooks위젯) - 라이브러리가 시키는 방법에 따라 진행하면 화면 변경됨

상태는 변화하는 UI의 동작으로 표현되는, 사용자의 액션에 따라서 변경가능한 데이터임
상태 관리는 여러 컴포넌트 간의 데이터 통신을 한곳에서 관리하는것
상태 관리가 필요한 이유:우리가 JSP에서 만드는 페이지처럼 댓글 작성후 버튼 클릭하면
서버에서 DB에 댓글 넣고 화면 전체를 리턴하는데->댓글란만 갱신할 수 없을까?
(화면 로딩 속도 아끼고 화면 깜빡임도 덜하게 하고 개발자들이 편하게 작업가능한 등
장점 많음)->상태와 상태 관리 라는 개념 나옴

widgetItems는 이미 생성된 List인데 위젯객체를 새로 만들지 않고 함수만 주고 싶으면
()=>Container...처럼 적기(미리 만들어둔경우처럼 메모리를 잡아먹지 않아서 이득임)

InkWell이 없을경우 Center나 Widget 등으로 감싸서 이름만 잉크웰로 바꿔주면됨

페이지 이동은 기본적으로 처음화면 위에 둘째화면을 올리는 형태라서 자동으로 뒤로가기
버튼이 생기는데 Navigator.push 대신 Navigator.pushReplacement를 쓰면 기존화면을
없애고 대신 새화면을 띄우는게 되어서 뒤로가기 버튼이 안생긴다.

체크된 내용 등 내용을 다른 페이지에서도 보고싶으면 controller로 따로 빼는게 좋다
watch와 read의 차이점: watch는 상태를 계속 관찰 하겠다.
read는 상태를 한번만 확인하겠다.(상태가 바뀌어도 화면에 영향을 끼치지 못함)
(상태를 변화시키는 함수는 사용가능)