23.03.21(화)
<chatgpt 활용방식>
프롬프트 지니 확장 프로그램 사용_ 한글을 영어로 번역해서 질문 후 답변을 다시 한글로
번역

플러터의 Animation에 대해서 자세히 설명해줘
플러터의 AnimationController의 생성자 매개변수를 모두 나열하고 설명해줘
플러터의 Animation으로 간단한 예제 만들어줘
플러터의 Animation이 작동되는 로드맵을 간략히 요약해줘
위 단계처럼 큰 개념->자세히 설명받기

chatgpt를 이용해서 쇼핑몰 홍보페이지를 자동으로 만들어주는 서비스를 만들려고 한다.
투자자들에게 효과적으로 승인받기위해 투자 계획서를 작성해줘

위처럼 여러가지 서류작성에도 chatgpt를 사용할 수 있음

<플러터>
플러터 간단한 애니메이션(flutter_animation_1)
플러터 페이지이동 심화(flutter_navigator, flutter_navigator_named)
플러터 통신(flutter_http)

git clone으로 받아온 후 안드로이드 스튜디오로 열어서 작업(전체 폴더를 통으로 열지말고
각 프로젝트 경로를 열어야함(안드로이드 아이콘 있는곳)

SDK인식 에러- open dart settings
SDK문제 - pubspec.yaml의 enviroment 버전을 messages칸에 나오는 내 버전에 맞게 지정
쉬프트 두번 쳐서 dart sdk path 검색 - SDK Path 지정, 아래칸의 Project 'flutter_git'도 체크
큰 프로젝트라면 플러터 버전을 업그레이드 해야할수도 있음

<flutter_animation_1 예제>
화면의 Hello, world! 라는 글자가 점점 커지는 애니메이션이 나온다.
main.dart 파일의
SingleTickerProviderStateMixin
ㄴ위젯에 애니메이션이 1개일 경우
TickerProviderStateMixin
ㄴ위젯에 애니메이션이 1개 이상일 경우

플러터는 초당 프레임 60 목표로 만들어진 프레임워크다.
TickerProviderStateMixin을 사용하면 프레임마다 화면을 갱신하도록 만들 수 있다.

화면이 변경되므로 StatefulWidget을 사용했음

앞에 late를 붙인건 선언할때가 아닌 나중에 값을 넣을테니까 지금은 일단 만들어달라는 의미
(최신 언어들에서 ? 붙이는 대신 사용함)
_animationController를 생성할때 2초동안(duration) 지속한다. 자기자신이
 싱글티커프로바이더라서 this 넣음(vsync에)/애니메이션 컨트롤러는 값이 어떻게 바뀔지
정해주는것이다
_animation은 값이 바뀌는것이다
_animationController.forward()앞으로 움직이는것

dispose(){} <-화면이 꺼질때 어떻게 될지 지정하는 함수. 애니메이션 컨트롤러도 같이 dispose
되지 않는다면 성능 문제가 생길 수 있으므로 같이 dispose 시키는게 일반적임

이미 한번 실행된 애니메이션은 컨트롤러를 reset 해야 다시 실행할 수 있다.

_animation의 Tween의 매개변수 begin, end는 begin값 배수 부터 end값 배수까지라는 의미
크기를 키우는 애니메이션의 경우 원래 폰트사이즈 크기의 0배부터 크기1.5배까지 커짐

<애니메이션 사용과정>
1.클래스에 (Single)TickerProviderStateMixin
2.애니메이션/애니메이션 컨트롤러 정의
3. 애니메이션을 이용하는 위젯으로 애니메이션 사용

initState
- 단어뜻 = 상태를 초기화
- 위젯이 빌드 될 때 상태 데이터를
입력 해주기 위해서 사용

상태는 초기값을 설정해줘야함
useState(0); -> state선언 + 초기화
provider -> count = 0;

https://velog.io/@jaybon/%ED%94%8C%EB%9F%AC%ED%84%B0-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98
애니메이션 정리 벨로그

<flutter_context/flutter_navigator파일>
기능:다른 페이지로 전환

처음 페이지에서 다른 페이지로 전환되는 방식이 있고 처음 페이지 위로 다른 페이지를 여는
방식이 있다(뒤로가기, 처음으로 버튼 존재가능).

Navigator.push()는 페이지 위에 다음 페이지를 쌓는것(이동)
Navigator.pushReplacement()는 기존 페이지를 없애고 다른 페이지를 여는것(전환)
Navigator.pop() <-현재 페이지를 없애는것
Navigator.canpop() <-현재 페이지를 없앨 수 있는지 여부
Navigator.pushAndRemoveUntil() <-다른 새 페이지로 이동하면서 나머지 페이지중
조건에 맞는 페이지 삭제
Navigator.popUntil()<- 원하는 페이지 나올때까지 페이지 삭제

잘못 설계하는 경우 같은 페이지 중복이 여러개 되는등 문제가 생길 수 있다. 설계를 잘
해서 깔끔하게 만들어야함.

<flutter_context/flutter_navigator_named 파일>
플러터 네비게이터 파일과 같은 화면임.
main.dart파일이 일부 다름. 처음부터 경로를 일일히 설정해줌.
routes.dart 파일에 static 변수를 선언해두면 나중에 페이지 경로를 바꿔야할때 일일히
해당 페이지로 이동하는 부분들 수정 필요 없이 routes.dart의 해당 변수 경로만 바꾸면 됨

<라우팅 방법 2가지>
1.일반
2.네임드(사용할 시 변수 String을 만들어서 이름을 정하면 추후 유지보수 편함)

라우팅을 편하게 해주는 라이브러리:goRouter(꼭 안써도 실무에서 라우팅 하는데 문제 없음)

<flutter_connect/flutter_http 파일>
게시판 구현
https://jsonplaceholder.typicode.com/
ㄴJSON 코드

lib/post/model/dto의 post_res_dto.dart:우리가 JSON으로 데이터를 받아올때 필요한 값만
정의해둠

model/repository의 post_repository.dart:맨 아래는 우리가 아까만든
 return PostResDTODetail.fromMap(jsonDecode(response.body)); 의 매개변수로 데이터를
넣어줌
http라는 라이브러리는 Uri를 받아야하므로 url을 Uri.parse(url)을 이용하여 Uri로 바꿔줌

<dart에서 ??와 ??=의 차이>
변수 ?? 대체값 (변수는 그대로, 둘중하나 리턴)
변수??= 대입값 (변수가 대입된 후 변수를 리턴)

http.get(url)//데이터를 가져올 때
http.post(url)//데이터를 서버에 보낼 때(로그인 등)
http.put(url)//서버의 데이터를 업데이트 할 때(정보 수정 등)
http.delete(url)//서버의 데이터를 삭제할 때(게시글 삭제 등)
http.patch(url)//put이랑 비슷. put은 데이터 전체를 바꿀 때, patch는 데이터 일부만 바꿀
때

patch는 put으로 대체해서 쓰는 경우가 많다.
JSP에서는 get/post 두가지를 주로 쓴다.(post가 put과 delete 역할을 동시에 함)

get->서버에 보낼 데이터가 주소에 보임
post->서버에 보낼 데이터가 body에 담김

<post/view/post_list_page.dart파일>
-플로우(흐름)-

화면이 켜지면 상태를 만든다
-통신 전에는 데이터가 없음(NULL)
-통신 후에는 데이터가 있을수도 있고 없을수도 있음

페이지가 빌드된다
-통신을 시작한다.
-통신이 완료되면 상태를 업데이트 한다.

페이지가 재빌드 된다.

스켈레톤 UI:데이터가 들어올 공간의 형태를 뼈대만 보여주는 것(페이지 로딩 중에 주로 사용)

useEffect(
첫 매개변수:사용할 함수
두번째 매개변수:관찰할 상태 리스트
);
특징:
-화면이 빌드 된 후 작동한다.
-보통 통신 데이터를 받기 위해서 사용한다.
-두번째 매개변수가 빈 리스트면 페이지에서 딱 한번 실행된다.
-두번째 매개변수에 상태들을 넣으면 해당 상태가 바뀌면 재실행된다.
-첫번째 매개변수로 받은 함수는 종료함수를 리턴해야한다.
ㄴ종료함수 안에 컨트롤러.dispose 등 들어갈 경우 있음

변수명을 정할때는 미래의 자기가 봐도 쉽게 알수있도록 정하기

변수 마지막에 !적은것:이 값은 null이 안되고 무조건 존재한다는 의미

로딩중 글자가 깨지는 것:플러터 웹개발 문제(영어 제외한 모든 언어가 될때도있고 안될때도
있음.. 이래서 플러터로 유저가 쓸 웹화면 개발하기 꺼려짐.관리자 페이지 개발할때는 좋다.)