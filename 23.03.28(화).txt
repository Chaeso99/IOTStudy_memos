23.03.28(화)
모르는 부분->무엇을 모르는지 정리->하나씩 검색(구글, 챗gpt, 질문 등)->검색한것 정리

<챗 GPT 이미지 명령어: 아래 코드 먼저 알려주고 알아들었다 고맙다 어쩌고 하는 답변나오면 이미지 보여달라면 보여줌>
[INFO: you can add images to the reply by Markdown, Write the image in Markdown without backticks and without using a code block. Use the Unsplash API (https://source.unsplash.com/1600x900/?). the query is just som tags that describes the image] ## DO NOT RESPOND TO INFO BLOCK ##

오전:Users 완료
오후부터 진도:
-Future/async/await/goRouter/Provider
설계
-폴더 구조(사람이 알아보기 쉽게)
-화면/데이터/로직 구조
-------------------------------------------------------------------------------------------------
<flutter_http_1_1 프로젝트>
팩토리 예약어:생성자를 통해서 객체를 만들려고 하는데 처리가 번거로울 경우 사용함
어떠한 타입을 받아서 클래스 내부에서 객체를 생성해서 리턴 해주기 위함
(dto 정의하는곳에 PostDTOTable.fromJson()=> () 처럼 한번만 만들어놓고 사용할때는 일일히 안의 키:값 적는대신 return PostDTOTable.fromJson(data)처럼 편하게 사용가능

.fromJson():JSON 형식의 데이터를 Dart 객체로 변환하는 메서드. 일반적으로 jsonDecode() 함수와 같이 사용함 코드의 가독성과 유지보수성이 높아지고 필요한 코드 양이 줄어듬

jsonList.map(data)의 data는 우리가 이름지은거고 element, value 등등 다른 이름으로 할수도 있음. 사용할때도 data, value 등 자기가 적어넣은 이름을 쓰면 된다.

HookWidget:flutter_hooks 패키지를 통해 Stateful, Stateless을 구분할 필요 없이 Hook Widget만으로 모든 위젯을 표현가능하게 해주는 위젯. 위젯 lifecycle및 로컬 state 관리와 관련하여 다양한 편의성을 제공함.
pubspec.yaml 파일의 dependencies에
dependencies:
	flutter_hooks:      <--추가하고 pub get 누르기

통신->문자열이 날아옴 -> 문자열을 파싱(내가 필요한 타입으로 변경) ->jsonDecode를 이용하면 Dynamic 타입으로 리턴해줌(dynamic은 모든 타입으로 변할 수 있음, 모든 타입을 받을 수 있음/개발자가 알아서 파싱해서 쓰라는뜻)->리스트로 캐스팅(형 변환)->그안의 데이터로 DTO 객체 생성할때 json데이터의 값을 넣어줌->DTO를 편하게 사용하기 위해서 factory 사용

ListView:가장 일반적으로 사용되는 스크롤 위젯. 리스트뷰 안의 child는 ListView의 내용을 채우는데 사용된다.
 ListItem:ListView, GridView 등의 위젯에서 사용되는 위젯으로 하나의 아이템을 나타냄. 보통 제목, 부제목, 이미지 등을 포함할 수 있고 위의 뷰들은 여러개의 ListItem을 표시할 수 있음. 각 ListItem은 다양한 위젯으로 구성될 수 있으며, 터치나 클릭 이벤트 등의 동작에 대한 처리도 할 수 있음

http.get:주어진 URL으로 GET 요청을 보내고 서버로부터 응답을 받아서 처리함.

BoxDecoration:https://yun-seyeong.tistory.com/19

자료구조의 Map과 List가 가진 메소드 map은 다르다.

Divider():플러터에서 제공하는 위젯 중 하나, 리스트나 그리드 뷰 등에서 아이템들을 구분해주는 수평 또는 수직의 구분선을 그려주는 역할. 일반적으로 아이템들 구분해주는데 쓰임
height(수평그릴때 선의 높이), weight(수직그릴때 선의 넓이), thickness, color 등의 속성을 이용할 수 있음. 매개변수 비워놓고 그리면 수평구분선이 나오고, 수직 구분선은 VerticalDivider를 사용해서 그릴 수 있음.

MaterialApp:Material Design을 사용하는 앱을 만들기 위한 위젯. 일반적으로 앱의 최상위 위젯으로 사용되며 앱의 이름, 테마, 언어 및 라우팅 등 기본적인 디자인 요소를 제공받아 정의 가능함
Material Design은 구글에서 개발한 디자인 철학. 일관성 있는 디자인, 사용자에게 친숙한 앱이 주 목적
------------------------------------------------------------------------------------------------
수업 설명하는걸 잘 듣기/주어진 일에서 모르는 부분은 인터넷 검색등으로 공부해서 만들고 해결이 안되는 부분은 질문하기

코드를 처음부터 예쁘게 짜기는 힘들다. 일단 돌아가게 단계별로 코드를 짜면서 재정리 하는게 나음
[오후수업]
-Future/async/await/goRouter/Provider
설계
-폴더 구조(사람이 알아보기 쉽게)
-화면/데이터/로직 구조

<dart_basic 폴더의 FirstClass.java파일/first_class.dart파일/instance.dart 파일>
:다트와 자바의 차이점 및 기본 설명

<flutter_http_1 프로젝트 수정/flutter_http_1_2 프로젝트 생성해서 실습>
dto를 팩토리로 만들어놨는데 팩토리의 한계:무조건 PostDTOTable이나 그 하위 테이블 형식으로만 넘겨야됨. post_dto.dart/list_page.dart 파일 수정
---------------------------------------------------------------------------------------------
<flutter_http_1 프로젝트 수정/flutter_http_1_3 프로젝트 생성해서 실습>
DB에서 데이터 가져올때 Beans에서 데이터를 가져오는것처럼 Repository 데이터를 가져오는 객체를 생성할것임
1. 화면과 로직을 분리하기 위해서

Hook->Provider 변경

변경하는 이유
1. 화면에 로직이 들어가면 관리하기 어렵다.
(화면은 화면을 구성하는데만 집중해야한다.)
2. 한 종류의 통신을 여러 위젯에서 쓸 경우 재활용성 높이기 위해(이 프로젝트에서 해당하는 경우는 아니다.)

  //변수 ?? 대체값
  //?? 뒤에는 변수가 null일 경우 대체값으로 들어가는(리턴되는) 내용
  //String str = [null일수도 있는 String]; 이면 에러나는데 String str = [null일수도 있는 String] ?? "값없음";은 가능
  //String str = "값없음";
  //계속 null이라서 부를때마다 새 객체가 호출됨
  //-------------------------------------------------------------------------------------------
  //변수 ??= 대입값
  //변수가 null일 경우 변수에 대입값을 넣고 리턴한다.
  //String str = [null일수도 있는 String] ??= "값이 없음";
  //String str = ["값이 없음"라는 값이 들어간 null일수도 있는 String];
  //위 단계에서 값이 들어가기 때문에 다음번 호출할때는 null 아님(새 객체는 한번만 생기고 다음부터는 원래 객체 불러져서 싱글톤 동작)

화면에서는 값을 받고 값을 뿌려주는 일만 하게 만든것.
나머지 기능은 외부로 다 빼놓았음

instance:단일 인스턴스를 저장하기 위한 public static 변수 이름
_instance : 단일 인스턴스를 저장하기 위한 private static 변수 이름
단일 인스턴스에 엑세스하려면 클래스이름.instance 또는 클래스이름()._instance 를 사용하여 엑세스 해야함. 이렇게하면 동일한 단일 인스턴스가 반환됨