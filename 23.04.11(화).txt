23.04.11(화)
정리 및 실습
ko.javascript.info
-문서/이벤트 기초/UI 이벤트/폼과 폼 조작

TCP SCHOOL
-JQUERY
-AJAX
--------------------------------------------------------------------------------------------------
[수업]jspspring_init.pdf
스프링은 프레임워크다 == 구조화되어있다.
자바 프로젝트로 작업하는것:돼지를 키워서 가공을 요리해먹는 수준
JSP 프로젝트로 작업:시장에서 재료를 직접 사와서 요리해먹는 수준
스프링 프레임워크:마트처럼 재료들이 준비되어있는데 종류가 너무 많음..초보가 세팅하기 너무 어려움
스프링부트:밀키트. 그냥 데워먹으면 됨

Spring Legacy:Legacy는 구식 이라는 뜻. 이클립스에서도 스프링레거시 프로젝트 지원이 중단되었음. SpringBoot로 만들자

우리는 SpringBoot 실행 순서에서 4번을 중점으로 작업하면 됨. 나머지 부분은 스프링부트가 세팅해준걸 쓰므로 정말 편하다.
opinion:의견

IoC/DI : A객체에서 다른객체들이 필요하면 이미 싱글톤처럼 만들어진 다양한 다른 객체들을 IOC 컨테이너에서 가져다가 전달해줌(원래 있던것을 통에 보관해놨다가 필요한 객체에게 전달해 주는것)스프링이 알아서 관리함

AOP:관점 지향 프로그래밍
우리가 은행 서비스를 만들면 계좌이체, 입출금, 이자계산이 핵심적인 기능
부가적인 로직:보안, 로깅 등 인데 부가로직을 모든 핵심로직에 일일히 한번씩 넣으면 양이 너무 많아지니까 서로 교차시켜서 돌아가는식으로 작성(pdf 참고)

JSP는 서블릿 컨테이너. 요청이 들어오면 해당 서블릿 주소로 넘겨주는 역할을 함
Spring은 서블릿 컨테이너, IOC 컨테이너를 둘 다 가지고있음.
JSP를 Spring으로 덮고 Spring을 SpringBoot로 덮은거라고 생각하면됨

<인텔리제이로 스프링 기초 프로그래밍 배우기>
1.프로그램이 살아 있는 것 while
2.annotation
3.리플렉션
4.롬복
5.maven
6.gradle
7.스프링부트

인텔리제이도 이클립스와 마찬가지로 JavaSwing으로 만든 프로그램이다. 이클립스보다 더 가벼움

프로그램이란?
일반인 입장:디스크에 저장된 작동 대기중인 컴파일된 코드(한번 켜면 에러나거나 우리가 끄기전에는 안꺼짐)
개발자 입장:프로그램은 결국 함수다. 우리가 프로그램을 실행하려고 하면 메인함수를 실행함

프로세스란?
디스크에서 메모리로 올라가서 작동 중인 프로그램

프로그램을 계속 켜놓을 수 있는 이유:무한 반복. 우리가 서버든 스윙이든 어떻게 안꺼지고 존재하고있는지를 알고있어야 이해하기 쉽다.
프로젝트에 메인이 여러개라도 메인은 단 하나만 실행된다.
안쓰는 import들 제거:Ctrl Alt O
인터페이스 위에 무조건 붙이는것 두가지:@Retention()//어노테이션이 유지되는 기간
@Target() //어노테이션이 붙을 수 있는 위치
Ctrl Alt V:자동으로 변수 생성

리플렉션:자바에서 자바 코드를 분석하는 방법. 프로그램 실행 중에 클래스의 정보를 동적으로 조작할 수 있음. 문제가 많아서 사용을 지양하는것이 좋으나 일부 프레임워크나 라이브러리에서는 꼭 써야됨

인텔리제이는 lombok이 자동으로 설치되어 있음
shift키 두번:검색, 이동 등 다양한 기능이 있음

원래 라이브러리 추가한 방법:프로젝트 안의 WEB-INF/lib 안에 .jar 파일로 넣거나
build path를 이용해서 add JAR file 했었음
지금부터는 maven/gradle이 알아서 해줄거임(다운로드 관리 등등 다)

메이븐 기준으로 pom.xml에<dependencies>를 넣어서 그안에 mvn repository 사이트에서 복사해온 <dependency> 코드를 붙여넣으면 됨(빨간글씨 뜨면 저장하고 우측상단의 M 아이콘 누르기)

롬복 설치경로:C:\Users\dita810\.m2\repository\org\projectlombok\lombok

이클립스에서 maven 쓰는법:자바 프로젝트 만들어서 우클릭 - Configure - 메이븐 프로젝트로 변경 - Main.java파일 만들고 우클릭 -  Run As - Maven build ... 된거 선택 - 메뉴바의 run configurations - 자바 어플리케이션 더블클릭 - Main 선택 - Run 해서 잘돌아가면 되는것임

gradle은 build.gradle 파일을 수정하면 된다.
dependencies에 컴파일 하기 전에
annotationProcessor'org.projectlombok:lombok:1.18.26' 코드도 넣어줘야함

스프링 이니셜라이저 설정:Gradle-Groovy/Java/2.7.10/com.example/firstboot/Jar/17
디펜던시 Lombok, Spring Web
-----------------------------------------------------------------------------------------------
[스프링 팀 프로젝트]JSP 팀 프로젝트를 그대로 스프링 버전으로 이관
JSP 프로젝트를 열심히 만들것. 시간이 부족하면 부가 기능 제외하고 핵심 기능 먼저 확실하게 제작 

핵심 기능-> 핵심 기능 + 부가 기능
서블릿 코드-> 스프링 코드
JDBC-> mybatis or jpa(JDBC보다 더 간편한 라이브러리들. 얘들도 결국 JDBC 사용함)
세션-> 세션 or JWT
JSP-> JSP or thymeleaf
.jsp->.html

좋은 폰트의 조건:어떤 글자든 넓이가 같아야 편하다, 글자 구분이 쉬워야 한다.(l이랑 i 등)